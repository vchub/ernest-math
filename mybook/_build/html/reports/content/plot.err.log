Traceback (most recent call last):
  File "/home/ch/code/ernest-math/.venv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ch/code/ernest-math/.venv/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/home/ch/code/ernest-math/.venv/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/ch/code/ernest-math/.venv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/home/ch/code/ernest-math/.venv/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/home/ch/code/ernest-math/.venv/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/ch/code/ernest-math/.venv/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
import numpy as np
x = np.linspace(-5, 5, 100)
y = x**2
plt.plot(x, y)
plt.savefig('images/parabola.png')
------------------


[31m---------------------------------------------------------------------------[39m
[31mFileNotFoundError[39m                         Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 6[39m
[32m      4[39m y = x**[32m2[39m
[32m      5[39m plt.plot(x, y)
[32m----> [39m[32m6[39m [43mplt[49m[43m.[49m[43msavefig[49m[43m([49m[33;43m'[39;49m[33;43mimages/parabola.png[39;49m[33;43m'[39;49m[43m)[49m

[36mFile [39m[32m~/code/ernest-math/.venv/lib/python3.13/site-packages/matplotlib/pyplot.py:1251[39m, in [36msavefig[39m[34m(*args, **kwargs)[39m
[32m   1248[39m fig = gcf()
[32m   1249[39m [38;5;66;03m# savefig default implementation has no return, so mypy is unhappy[39;00m
[32m   1250[39m [38;5;66;03m# presumably this is here because subclasses can return?[39;00m
[32m-> [39m[32m1251[39m res = [43mfig[49m[43m.[49m[43msavefig[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m  [38;5;66;03m# type: ignore[func-returns-value][39;00m
[32m   1252[39m fig.canvas.draw_idle()  [38;5;66;03m# Need this if 'transparent=True', to reset colors.[39;00m
[32m   1253[39m [38;5;28;01mreturn[39;00m res

[36mFile [39m[32m~/code/ernest-math/.venv/lib/python3.13/site-packages/matplotlib/figure.py:3490[39m, in [36mFigure.savefig[39m[34m(self, fname, transparent, **kwargs)[39m
[32m   3488[39m     [38;5;28;01mfor[39;00m ax [38;5;129;01min[39;00m [38;5;28mself[39m.axes:
[32m   3489[39m         _recursively_make_axes_transparent(stack, ax)
[32m-> [39m[32m3490[39m [38;5;28;43mself[39;49m[43m.[49m[43mcanvas[49m[43m.[49m[43mprint_figure[49m[43m([49m[43mfname[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~/code/ernest-math/.venv/lib/python3.13/site-packages/matplotlib/backend_bases.py:2186[39m, in [36mFigureCanvasBase.print_figure[39m[34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)[39m
[32m   2182[39m [38;5;28;01mtry[39;00m:
[32m   2183[39m     [38;5;66;03m# _get_renderer may change the figure dpi (as vector formats[39;00m
[32m   2184[39m     [38;5;66;03m# force the figure dpi to 72), so we need to set it again here.[39;00m
[32m   2185[39m     [38;5;28;01mwith[39;00m cbook._setattr_cm([38;5;28mself[39m.figure, dpi=dpi):
[32m-> [39m[32m2186[39m         result = [43mprint_method[49m[43m([49m
[32m   2187[39m [43m            [49m[43mfilename[49m[43m,[49m
[32m   2188[39m [43m            [49m[43mfacecolor[49m[43m=[49m[43mfacecolor[49m[43m,[49m
[32m   2189[39m [43m            [49m[43medgecolor[49m[43m=[49m[43medgecolor[49m[43m,[49m
[32m   2190[39m [43m            [49m[43morientation[49m[43m=[49m[43morientation[49m[43m,[49m
[32m   2191[39m [43m            [49m[43mbbox_inches_restore[49m[43m=[49m[43m_bbox_inches_restore[49m[43m,[49m
[32m   2192[39m [43m            [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m   2193[39m [38;5;28;01mfinally[39;00m:
[32m   2194[39m     [38;5;28;01mif[39;00m bbox_inches [38;5;129;01mand[39;00m restore_bbox:

[36mFile [39m[32m~/code/ernest-math/.venv/lib/python3.13/site-packages/matplotlib/backend_bases.py:2042[39m, in [36mFigureCanvasBase._switch_canvas_and_return_print_method.<locals>.<lambda>[39m[34m(*args, **kwargs)[39m
[32m   2038[39m     optional_kws = {  [38;5;66;03m# Passed by print_figure for other renderers.[39;00m
[32m   2039[39m         [33m"[39m[33mdpi[39m[33m"[39m, [33m"[39m[33mfacecolor[39m[33m"[39m, [33m"[39m[33medgecolor[39m[33m"[39m, [33m"[39m[33morientation[39m[33m"[39m,
[32m   2040[39m         [33m"[39m[33mbbox_inches_restore[39m[33m"[39m}
[32m   2041[39m     skip = optional_kws - {*inspect.signature(meth).parameters}
[32m-> [39m[32m2042[39m     print_method = functools.wraps(meth)([38;5;28;01mlambda[39;00m *args, **kwargs: [43mmeth[49m[43m([49m
[32m   2043[39m [43m        [49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43m{[49m[43mk[49m[43m:[49m[43m [49m[43mv[49m[43m [49m[38;5;28;43;01mfor[39;49;00m[43m [49m[43mk[49m[43m,[49m[43m [49m[43mv[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43mkwargs[49m[43m.[49m[43mitems[49m[43m([49m[43m)[49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[43mk[49m[43m [49m[38;5;129;43;01mnot[39;49;00m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43mskip[49m[43m}[49m[43m)[49m)
[32m   2044[39m [38;5;28;01melse[39;00m:  [38;5;66;03m# Let third-parties do as they see fit.[39;00m
[32m   2045[39m     print_method = meth

[36mFile [39m[32m~/code/ernest-math/.venv/lib/python3.13/site-packages/matplotlib/backends/backend_agg.py:481[39m, in [36mFigureCanvasAgg.print_png[39m[34m(self, filename_or_obj, metadata, pil_kwargs)[39m
[32m    434[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mprint_png[39m([38;5;28mself[39m, filename_or_obj, *, metadata=[38;5;28;01mNone[39;00m, pil_kwargs=[38;5;28;01mNone[39;00m):
[32m    435[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m    436[39m [33;03m    Write the figure to a PNG file.[39;00m
[32m    437[39m 
[32m   (...)[39m[32m    479[39m [33;03m        *metadata*, including the default 'Software' key.[39;00m
[32m    480[39m [33;03m    """[39;00m
[32m--> [39m[32m481[39m     [38;5;28;43mself[39;49m[43m.[49m[43m_print_pil[49m[43m([49m[43mfilename_or_obj[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mpng[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[43mpil_kwargs[49m[43m,[49m[43m [49m[43mmetadata[49m[43m)[49m

[36mFile [39m[32m~/code/ernest-math/.venv/lib/python3.13/site-packages/matplotlib/backends/backend_agg.py:430[39m, in [36mFigureCanvasAgg._print_pil[39m[34m(self, filename_or_obj, fmt, pil_kwargs, metadata)[39m
[32m    425[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    426[39m [33;03mDraw the canvas, then save it using `.image.imsave` (to which[39;00m
[32m    427[39m [33;03m*pil_kwargs* and *metadata* are forwarded).[39;00m
[32m    428[39m [33;03m"""[39;00m
[32m    429[39m FigureCanvasAgg.draw([38;5;28mself[39m)
[32m--> [39m[32m430[39m [43mmpl[49m[43m.[49m[43mimage[49m[43m.[49m[43mimsave[49m[43m([49m
[32m    431[39m [43m    [49m[43mfilename_or_obj[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43mbuffer_rgba[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m=[49m[43mfmt[49m[43m,[49m[43m [49m[43morigin[49m[43m=[49m[33;43m"[39;49m[33;43mupper[39;49m[33;43m"[39;49m[43m,[49m
[32m    432[39m [43m    [49m[43mdpi[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mfigure[49m[43m.[49m[43mdpi[49m[43m,[49m[43m [49m[43mmetadata[49m[43m=[49m[43mmetadata[49m[43m,[49m[43m [49m[43mpil_kwargs[49m[43m=[49m[43mpil_kwargs[49m[43m)[49m

[36mFile [39m[32m~/code/ernest-math/.venv/lib/python3.13/site-packages/matplotlib/image.py:1657[39m, in [36mimsave[39m[34m(fname, arr, vmin, vmax, cmap, format, origin, dpi, metadata, pil_kwargs)[39m
[32m   1655[39m pil_kwargs.setdefault([33m"[39m[33mformat[39m[33m"[39m, [38;5;28mformat[39m)
[32m   1656[39m pil_kwargs.setdefault([33m"[39m[33mdpi[39m[33m"[39m, (dpi, dpi))
[32m-> [39m[32m1657[39m [43mimage[49m[43m.[49m[43msave[49m[43m([49m[43mfname[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mpil_kwargs[49m[43m)[49m

[36mFile [39m[32m~/code/ernest-math/.venv/lib/python3.13/site-packages/PIL/Image.py:2583[39m, in [36mImage.save[39m[34m(self, fp, format, **params)[39m
[32m   2581[39m         fp = builtins.open(filename, [33m"[39m[33mr+b[39m[33m"[39m)
[32m   2582[39m     [38;5;28;01melse[39;00m:
[32m-> [39m[32m2583[39m         fp = [43mbuiltins[49m[43m.[49m[43mopen[49m[43m([49m[43mfilename[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mw+b[39;49m[33;43m"[39;49m[43m)[49m
[32m   2584[39m [38;5;28;01melse[39;00m:
[32m   2585[39m     fp = cast(IO[[38;5;28mbytes[39m], fp)

[31mFileNotFoundError[39m: [Errno 2] No such file or directory: 'images/parabola.png'

